/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.hrm.ui;

import com.hrm.controlller.ChamCongController;
import com.hrm.dao.ChamCongDAO;
import com.hrm.dao.impl.ChamCongDAOImpl;
import com.hrm.dao.NhanVienDAO;
import com.hrm.dao.impl.NhanVienDAOImpl;
import com.hrm.entity.ChamCong;
import com.hrm.entity.NhanVien;
import com.hrm.util.MsgBox;
import com.hrm.util.XDate;
import java.util.List;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class ChamCongform extends javax.swing.JInternalFrame implements ChamCongController {

    /**
     * Creates new form NguoiHocJDialog
     */
    public ChamCongform() {

        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI bui;
//        this.initialize();
        bui = (BasicInternalFrameUI) this.getUI();
        bui.setNorthPane(null);
        this.initialize();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel5 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblChamCong = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        txtTimKiem = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtThoiGian = new com.toedter.calendar.JDateChooser();
        jLabel10 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnCapNhat = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        btnChonTatCa = new javax.swing.JPanel();
        lblbtnCTC = new javax.swing.JLabel();

        setTitle("QLNS - Chấm công nhân viên");
        setMinimumSize(new java.awt.Dimension(980, 500));
        setPreferredSize(new java.awt.Dimension(998, 561));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 204));
        jLabel5.setText("CHẤM CÔNG NHÂN VIÊN");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, -1, -1));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        tblChamCong.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MÃ NV", "HỌ VÀ TÊN", "PHÒNG BAN", "CHỨC VỤ", "CÓ LÀM"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblChamCong.setRowHeight(25);
        tblChamCong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblChamCongMouseReleased(evt);
            }
        });
        tblChamCong.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tblChamCongPropertyChange(evt);
            }
        });
        jScrollPane1.setViewportView(tblChamCong);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("TÌM KIẾM"));

        txtTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimKiemActionPerformed(evt);
            }
        });
        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyReleased(evt);
            }
        });

        jLabel9.setText("Thời gian :");

        txtThoiGian.setDateFormatString("d/M/y");
        txtThoiGian.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                txtThoiGianMouseReleased(evt);
            }
        });
        txtThoiGian.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtThoiGianPropertyChange(evt);
            }
        });

        jLabel10.setText("Thông tin :");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtThoiGian, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 1820, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel10))
            .addComponent(jLabel9)
            .addComponent(txtThoiGian, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        btnCapNhat.setBackground(new java.awt.Color(74, 163, 92));
        btnCapNhat.setToolTipText("");
        btnCapNhat.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCapNhat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCapNhatMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCapNhatMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCapNhatMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnCapNhatMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnCapNhatMouseReleased(evt);
            }
        });
        btnCapNhat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnCapNhatKeyPressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("SF Pro Display", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Cập nhật");

        javax.swing.GroupLayout btnCapNhatLayout = new javax.swing.GroupLayout(btnCapNhat);
        btnCapNhat.setLayout(btnCapNhatLayout);
        btnCapNhatLayout.setHorizontalGroup(
            btnCapNhatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnCapNhatLayout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        btnCapNhatLayout.setVerticalGroup(
            btnCapNhatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnCapNhatLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(21, 21, 21))
        );

        btnChonTatCa.setBackground(new java.awt.Color(74, 163, 92));
        btnChonTatCa.setToolTipText("");
        btnChonTatCa.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnChonTatCa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnChonTatCaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnChonTatCaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnChonTatCaMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnChonTatCaMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnChonTatCaMouseReleased(evt);
            }
        });
        btnChonTatCa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnChonTatCaKeyPressed(evt);
            }
        });

        lblbtnCTC.setFont(new java.awt.Font("SF Pro Display", 1, 14)); // NOI18N
        lblbtnCTC.setForeground(new java.awt.Color(255, 255, 255));
        lblbtnCTC.setText("    Chọn tất cả");

        javax.swing.GroupLayout btnChonTatCaLayout = new javax.swing.GroupLayout(btnChonTatCa);
        btnChonTatCa.setLayout(btnChonTatCaLayout);
        btnChonTatCaLayout.setHorizontalGroup(
            btnChonTatCaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnChonTatCaLayout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addComponent(lblbtnCTC, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        btnChonTatCaLayout.setVerticalGroup(
            btnChonTatCaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblbtnCTC, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(btnChonTatCa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(btnCapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(126, 126, 126))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnChonTatCa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 970, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(561, 561, 561)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(59, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimKiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimKiemActionPerformed

    private void txtTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyReleased
        try {
            this.timKiem();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtTimKiemKeyReleased

    private void txtThoiGianPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtThoiGianPropertyChange
        if (evt.getPropertyName().equals("date")) {
            String date = XDate.toString(txtThoiGian.getDate(), "yyyy-MM-dd");
            fillTable(date, null);

        }

        if (tblChamCong.getRowCount() == 0) {

            checkall = true;
        } else {
            checkall = false;
        }
        updateStatus();
    }//GEN-LAST:event_txtThoiGianPropertyChange

    /*
    this.selectAll();
        for (int i = 0; i < tblChamCong.getRowCount(); i++) {

            if (tblChamCong.getValueAt(i, 4).equals(true)) {
                check++;
            }
        }
        updateStatus();
     */
 /*
    for (int i = 0; i < tblChamCong.getRowCount(); i++) {

            if (tblChamCong.getValueAt(i, 4).equals(true)) {
                check++;
            }
        }
        updateStatus();
        check = 0;
     */
    private void tblChamCongMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblChamCongMouseReleased
        // TODO add your handling code here:


    }//GEN-LAST:event_tblChamCongMouseReleased
    boolean checkall = false;
    private void tblChamCongPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tblChamCongPropertyChange
        // TODO add your handling code here:

    }//GEN-LAST:event_tblChamCongPropertyChange

    private void txtThoiGianMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtThoiGianMouseReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_txtThoiGianMouseReleased

    private void btnCapNhatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCapNhatMouseClicked
        this.delete();
        this.update();
        String date = XDate.toString(txtThoiGian.getDate(), "yyyy-MM-dd");
        fillTable(date, null);
    }//GEN-LAST:event_btnCapNhatMouseClicked

    private void btnCapNhatMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCapNhatMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCapNhatMouseEntered

    private void btnCapNhatMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCapNhatMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCapNhatMouseExited

    private void btnCapNhatMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCapNhatMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCapNhatMousePressed

    private void btnCapNhatMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCapNhatMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCapNhatMouseReleased

    private void btnCapNhatKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnCapNhatKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCapNhatKeyPressed

    private void btnChonTatCaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnChonTatCaMouseClicked
        // TODO add your handling code here:
        this.selectAll();
        for (int i = 0; i < tblChamCong.getRowCount(); i++) {

            if (tblChamCong.getValueAt(i, 4).equals(true)) {
                check++;
            }
        }
        updateStatus();
    }//GEN-LAST:event_btnChonTatCaMouseClicked

    private void btnChonTatCaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnChonTatCaMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_btnChonTatCaMouseEntered

    private void btnChonTatCaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnChonTatCaMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btnChonTatCaMouseExited

    private void btnChonTatCaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnChonTatCaMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnChonTatCaMousePressed

    private void btnChonTatCaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnChonTatCaMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_btnChonTatCaMouseReleased

    private void btnChonTatCaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnChonTatCaKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_btnChonTatCaKeyPressed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel btnCapNhat;
    private javax.swing.JPanel btnChonTatCa;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblbtnCTC;
    private javax.swing.JTable tblChamCong;
    private com.toedter.calendar.JDateChooser txtThoiGian;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables
  int check = 0;
    String chamCong;
    ChamCongDAO ccdao = new ChamCongDAOImpl();
    NhanVienDAO nvdao = new NhanVienDAOImpl();
    List<NhanVien> listNV = nvdao.getAll();
    List<NhanVien> listNVBySQL;

    @Override

    public void initialize() {
        this.fillTable(null, null);
        updateStatus();
    }

    @Override

    public void fillTable(String date, String keyword) {
        if (date == null) {
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblChamCong.getModel();
        model.setRowCount(0);

        try {
            if (keyword != null) {
                if (keyword.trim().substring(0, 2).equalsIgnoreCase("nv")) {
                    listNVBySQL = nvdao.getBySql("SELECT * FROM NhanVien WHERE MaNV like CONCAT('%', ? , '%')", "%" + keyword + "%");

                } else {
                    listNVBySQL = nvdao.getBySql("SELECT * FROM NhanVien WHERE HoTen like CONCAT('%', ? , '%')", "%" + keyword + "%");

                }
                for (NhanVien nv : listNVBySQL) {
                    Object[] row = {
                        nv.getMaNV(),
                        nv.getHoTen(),
                        nv.getMaPB() == 1 ? "Phòng kế toán" : "Phòng bán hàng",
                        nv.getMaCV() == 1 ? "Trưởng phòng" : "Nhân viên",
                        nv.getMaNV().equalsIgnoreCase(
                        chamCong = ccdao.getMaNVfromChamCong(nv.getMaNV(), date)) ? true : false
                    };

                    model.addRow(row);

                }
                return;

            }
            for (NhanVien nv : listNV) {
                Object[] row = {
                    nv.getMaNV(),
                    nv.getHoTen(),
                    nv.getMaPB() == 1 ? "Phòng kế toán" : "Phòng bán hàng",
                    nv.getMaCV() == 1 ? "Trưởng phòng" : "Nhân viên",
                    nv.getMaNV().equalsIgnoreCase(
                    chamCong = ccdao.getMaNVfromChamCong(nv.getMaNV(), date)) ? true : false
                };

                model.addRow(row);
            }

        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
            e.printStackTrace();
        }
        updateStatus();
    }

    @Override

    public void update() {
        for (int i = 0; i < tblChamCong.getRowCount(); i++) {
            try {

                if (tblChamCong.getValueAt(i, 4).equals(true)) {
                    ChamCong cc = new ChamCong();
                    cc.setMaNV(tblChamCong.getValueAt(i, 0).toString());
                    cc.setNgayLam(txtThoiGian.getDate());
                    cc.setThang(XDate.toDate(String.valueOf(txtThoiGian.getDate().getYear() + 1900)
                            + "-" + String.valueOf(txtThoiGian.getDate().getMonth() + 1) + "-" + "01", "yyyy-MM-dd"));
                    ccdao.create(cc);

                }
            } catch (Exception e) {
                e.printStackTrace();
            }

        }
        updateStatus();

    }

    @Override

    public void delete() {
//        if (!Auth.isManager()) {
//            MsgBox.alert(this, "Bạn không có quyền xóa người học!");
//        } else if (MsgBox.confirm(this, "Bạn thực sự muốn xóa người học này?")) {
        try {
            ccdao.deleteByKeyword("DELETE FROM BangChamCong WHERE NgayLam=?", XDate.toString(txtThoiGian.getDate(), "yyyy-MM-dd"));
            MsgBox.alert(this, "Cập nhật thành công!");
        } catch (Exception e) {
            e.printStackTrace();
        }
        updateStatus();
    }

    @Override

    public void selectAll() {
        if (lblbtnCTC.getText().equalsIgnoreCase("    Chọn tất cả")) {
            for (int i = 0; i < tblChamCong.getRowCount(); i++) {
                tblChamCong.setValueAt(true, i, 4);
                lblbtnCTC.setText("Bỏ chọn tất cả");
            }
        } else if (lblbtnCTC.getText().equalsIgnoreCase("Bỏ chọn tất cả")) {
            for (int i = 0; i < tblChamCong.getRowCount(); i++) {
                tblChamCong.setValueAt(false, i, 4);
                lblbtnCTC.setText("    Chọn tất cả");
            }

        }
        updateStatus();
    }

    @Override

    public void timKiem() {
        String date = XDate.toString(txtThoiGian.getDate(), "yyyy-MM-dd");
        String timKiem = txtTimKiem.getText();
        if (timKiem.equals("")) {
            this.fillTable(date, null);
            return;
        }
        if (timKiem.trim().substring(0, 2).equalsIgnoreCase("nv")) {
            this.fillTable(date, timKiem);
        } else {
            this.fillTable(date, timKiem);
        }
        updateStatus();
    }

    @Override
    public void updateStatus() {
        boolean cn = check == 0;

        // Trạng thái form
        btnCapNhat.setEnabled(!cn);
        btnChonTatCa.setEnabled(!checkall);
    }

}
