/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.hrm.ui;

import com.hrm.controlller.LuongController;
import com.hrm.dao.ChamCongDAO;
import com.hrm.dao.impl.ChamCongDAOImpl;
import com.hrm.dao.LuongDAO;
import com.hrm.dao.impl.LuongDAOImpl;
import com.hrm.dao.LuongUngDAO;
import com.hrm.dao.impl.LuongUngDAOImpl;
import com.hrm.dao.NhanVienDAO;
import com.hrm.dao.impl.NhanVienDAOImpl;
import com.hrm.dao.ThongKeDAO;
import com.hrm.dao.impl.ThongKeDAOImpl;
import com.hrm.dao.ThuongVaKyLuatDAO;
import com.hrm.dao.impl.ThuongVaKyLuatDAOImpl;
import com.hrm.entity.Luong;
import com.hrm.entity.LuongUng;
import com.hrm.entity.NhanVien;
import com.hrm.entity.ThongKe;
import com.hrm.entity.ThuongVaKyLuat;
import com.hrm.util.MsgBox;
import com.hrm.util.XDate;
import com.hrm.util.XImage;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class LuongJDialog extends javax.swing.JDialog implements LuongController {

    /**
     * Creates new form NguoiHocJDialog
     */
    public LuongJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.initialize();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        tabs = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblLuong = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        txtTimKiem = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtThoiGian = new com.toedter.calendar.JDateChooser();
        btnSelectAll = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtThucLanh = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtMaNV = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtHoTen = new javax.swing.JTextField();
        txtLuongCanBan = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        btnSua = new javax.swing.JButton();
        btnFirst = new javax.swing.JButton();
        btnPrev = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txtPhongBan = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtPCCOM = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtPCKhac = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtChucVu = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtBHXH = new javax.swing.JTextField();
        lblHinh = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtThuong = new javax.swing.JTextField();
        Phạt = new javax.swing.JLabel();
        txtPhat = new javax.swing.JTextField();
        txtBHYT = new javax.swing.JTextField();
        txtPCXang = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtTGform = new com.toedter.calendar.JDateChooser();
        lblCong = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        Phạt1 = new javax.swing.JLabel();
        btnUng = new javax.swing.JButton();
        txtLuongUng = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("EduSys - Quản lý người học");

        tblLuong.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "MÃ NV", "HỌ VÀ TÊN", "PHÒNG BAN", "CHỨC VỤ", "LƯƠNG CĂN BẢN", "THỰC LÃNH"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblLuong.setRowHeight(25);
        tblLuong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblLuongMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblLuongMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblLuong);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("TÌM KIẾM"));

        txtTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimKiemActionPerformed(evt);
            }
        });
        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyTyped(evt);
            }
        });

        jLabel9.setText("Thời gian :");

        jLabel10.setText("Thông tin :");

        txtThoiGian.setDateFormatString("M/y");
        txtThoiGian.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtThoiGianPropertyChange(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtThoiGian, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9)
                        .addComponent(jLabel10))
                    .addComponent(txtThoiGian, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        btnSelectAll.setText("Chọn tất cả");
        btnSelectAll.setEnabled(false);
        btnSelectAll.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnSelectAllMouseReleased(evt);
            }
        });
        btnSelectAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectAllActionPerformed(evt);
            }
        });

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSelectAll)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSelectAll)
                    .addComponent(jButton1))
                .addContainerGap(9, Short.MAX_VALUE))
        );

        tabs.addTab("DANH SÁCH", jPanel2);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(875, 611));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hrm/icon/User.png"))); // NOI18N
        jLabel2.setText("Họ và tên");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 60, 120, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hrm/icon/Money.png"))); // NOI18N
        jLabel3.setText("Lương căn bản");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 220, -1, -1));

        txtThucLanh.setEditable(false);
        txtThucLanh.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        txtThucLanh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtThucLanhActionPerformed(evt);
            }
        });
        jPanel1.add(txtThucLanh, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 250, 180, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hrm/icon/Conference.png"))); // NOI18N
        jLabel4.setText("Chức vụ");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 150, -1, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hrm/icon/Calendar.png"))); // NOI18N
        jLabel1.setText("Tháng");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        txtMaNV.setEditable(false);
        txtMaNV.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        txtMaNV.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMaNVKeyReleased(evt);
            }
        });
        jPanel1.add(txtMaNV, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 220, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hrm/icon/Payment.png"))); // NOI18N
        jLabel6.setText("Thực lãnh");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 220, 90, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hrm/icon/Company.png"))); // NOI18N
        jLabel7.setText("Phòng ban");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, -1, -1));

        txtHoTen.setEditable(false);
        txtHoTen.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.add(txtHoTen, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 90, 260, -1));

        txtLuongCanBan.setEditable(false);
        txtLuongCanBan.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.add(txtLuongCanBan, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 220, 110, -1));

        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 0));
        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 144, 120, -1));

        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hrm/icon/Edit.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        jPanel1.add(btnSua, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 430, -1, -1));

        btnFirst.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hrm/icon/first.png"))); // NOI18N
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });
        jPanel1.add(btnFirst, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 440, -1, -1));

        btnPrev.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hrm/icon/prevous.png"))); // NOI18N
        btnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevActionPerformed(evt);
            }
        });
        jPanel1.add(btnPrev, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 440, -1, -1));

        btnNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hrm/icon/Next.png"))); // NOI18N
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });
        jPanel1.add(btnNext, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 440, -1, -1));

        btnLast.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hrm/icon/last.png"))); // NOI18N
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });
        jPanel1.add(btnLast, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 440, -1, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hrm/icon/Money.png"))); // NOI18N
        jLabel8.setText("Phụ cấp Xăng");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 270, -1, -1));

        txtPhongBan.setEditable(false);
        txtPhongBan.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.add(txtPhongBan, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 150, 110, -1));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hrm/icon/Money.png"))); // NOI18N
        jLabel11.setText("Phụ cấp Cơm");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 320, -1, -1));

        txtPCCOM.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.add(txtPCCOM, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 320, 110, -1));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hrm/icon/Money.png"))); // NOI18N
        jLabel12.setText("Phụ cấp Khác");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 370, -1, -1));

        txtPCKhac.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.add(txtPCKhac, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 370, 110, -1));

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hrm/icon/Price list.png"))); // NOI18N
        jLabel13.setText("BHYT");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 220, -1, -1));

        txtChucVu.setEditable(false);
        txtChucVu.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        txtChucVu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtChucVuActionPerformed(evt);
            }
        });
        jPanel1.add(txtChucVu, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 150, 180, -1));

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hrm/icon/Price list.png"))); // NOI18N
        jLabel14.setText("BHXH");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 270, -1, -1));

        txtBHXH.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        txtBHXH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBHXHActionPerformed(evt);
            }
        });
        jPanel1.add(txtBHXH, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 270, 180, -1));

        lblHinh.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 102, 255)));
        jPanel1.add(lblHinh, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 30, 170, 170));

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hrm/icon/Add.png"))); // NOI18N
        jLabel15.setText("Thưởng");
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 320, -1, -1));

        txtThuong.setEditable(false);
        txtThuong.setForeground(new java.awt.Color(0, 255, 0));
        txtThuong.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        txtThuong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtThuongActionPerformed(evt);
            }
        });
        jPanel1.add(txtThuong, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 320, 180, -1));

        Phạt.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        Phạt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hrm/icon/Problem.png"))); // NOI18N
        Phạt.setText("Phạt");
        jPanel1.add(Phạt, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 370, -1, -1));

        txtPhat.setEditable(false);
        txtPhat.setForeground(new java.awt.Color(255, 0, 0));
        txtPhat.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        txtPhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPhatActionPerformed(evt);
            }
        });
        jPanel1.add(txtPhat, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 370, 180, -1));

        txtBHYT.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        txtBHYT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBHYTActionPerformed(evt);
            }
        });
        jPanel1.add(txtBHYT, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 220, 180, -1));

        txtPCXang.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.add(txtPCXang, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 270, 110, -1));

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hrm/icon/Clien list.png"))); // NOI18N
        jLabel16.setText("Mã nhân viên");
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        txtTGform.setDateFormatString("M/y");
        txtTGform.setEnabled(false);
        jPanel1.add(txtTGform, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 20, 220, -1));

        lblCong.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblCong.setForeground(new java.awt.Color(255, 51, 51));
        jPanel1.add(lblCong, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 20, 60, 40));

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hrm/icon/Clipboard.png"))); // NOI18N
        jLabel17.setText("Số ngày Làm:");
        jPanel1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 30, -1, -1));

        Phạt1.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        Phạt1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hrm/icon/Problem.png"))); // NOI18N
        Phạt1.setText("Lương ứng");
        jPanel1.add(Phạt1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 410, -1, -1));

        btnUng.setText("Ứng lương");
        btnUng.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUngActionPerformed(evt);
            }
        });
        jPanel1.add(btnUng, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 450, -1, -1));

        txtLuongUng.setText("100000");
        jPanel1.add(txtLuongUng, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 410, 180, -1));

        tabs.addTab("CẬP NHẬT", jPanel1);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 204));
        jLabel5.setText("QUẢN LÝ LƯƠNG NHÂN VIÊN");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tabs, javax.swing.GroupLayout.DEFAULT_SIZE, 760, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabs, javax.swing.GroupLayout.DEFAULT_SIZE, 519, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        // TODO add your handling code here:
        this.moveFirst();
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevActionPerformed
        // TODO add your handling code here:
        this.movePrev();
    }//GEN-LAST:event_btnPrevActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // TODO add your handling code here:
        this.moveNext();
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        // TODO add your handling code here:
        this.moveLast();
    }//GEN-LAST:event_btnLastActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        this.update();
    }//GEN-LAST:event_btnSuaActionPerformed

    private void tblLuongMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblLuongMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {

            this.row = tblLuong.getSelectedRow();
            this.edit(row);

        }
    }//GEN-LAST:event_tblLuongMouseClicked

    private void txtTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimKiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimKiemActionPerformed

    private void txtTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyReleased
        try {
            this.timKiem();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_txtTimKiemKeyReleased

    private void txtBHXHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBHXHActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBHXHActionPerformed

    private void txtThucLanhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtThucLanhActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtThucLanhActionPerformed

    private void txtChucVuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtChucVuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtChucVuActionPerformed

    private void txtThuongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtThuongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtThuongActionPerformed

    private void txtPhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPhatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPhatActionPerformed

    private void txtBHYTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBHYTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBHYTActionPerformed
    private void txtThoiGianPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtThoiGianPropertyChange
        if (evt.getPropertyName().equals("date")) {
            this.fillTable();
            putDataToThongKe();
            if (tblLuong.getRowCount() == 0) {
                sla = false;
            } else {
                sla = true;
            }

            try {
                resetForm();
            } catch (Exception e) {
            }
            updateStatus();
        }

    }//GEN-LAST:event_txtThoiGianPropertyChange

    private void txtMaNVKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMaNVKeyReleased
        try {
            this.timKiem();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtMaNVKeyReleased

    private void btnSelectAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectAllActionPerformed
        this.selectAll();


    }//GEN-LAST:event_btnSelectAllActionPerformed
    private void tblLuongMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblLuongMouseReleased
        // TODO add your handling code here:
        for (int i = 0; i < tblLuong.getRowCount(); i++) {

            if (tblLuong.getValueAt(i, 0).equals(true)) {
                checkxoa++;
            }
        }
        updateStatus();
        checkxoa = 0;
    }//GEN-LAST:event_tblLuongMouseReleased

    private void btnSelectAllMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSelectAllMouseReleased
        // TODO add your handling code here:
        for (int i = 0; i < tblLuong.getRowCount(); i++) {

            if (tblLuong.getValueAt(i, 0).equals(true)) {
                checkxoa++;
            }
        }
        updateStatus();
        checkxoa = 0;
    }//GEN-LAST:event_btnSelectAllMouseReleased

    private void txtTimKiemKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimKiemKeyTyped

    private void btnUngActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUngActionPerformed
        int month = txtTGform.getDate().getMonth() + 1;
        int year = txtTGform.getDate().getYear() + 1900;

        LuongUng listLuongUng = luongUngdao.getByMaNV(txtMaNV.getText().trim(), month, year);
        if (listLuongUng == null) {
            LuongUng lung = new LuongUng();
            lung.setThang(XDate.toDate(String.valueOf(txtTGform.getDate().getYear() + 1900)
                    + "-" + String.valueOf(txtTGform.getDate().getMonth() + 1) + "-" + "01", "yyyy-MM-dd"));
            lung.setMaNV(txtMaNV.getText());
            lung.setSoTien(Double.valueOf(txtLuongUng.getText()));
            luongUngdao.create(lung);
            MsgBox.alert(null, "Thành công");
        } else {
            MsgBox.alert(null, "M đã ứng lương");

        }
        this.edit(row);

    }//GEN-LAST:event_btnUngActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.delete();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LuongJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LuongJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LuongJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LuongJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                LuongJDialog dialog = new LuongJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Phạt;
    private javax.swing.JLabel Phạt1;
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrev;
    private javax.swing.JButton btnSelectAll;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnUng;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCong;
    private javax.swing.JLabel lblHinh;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblLuong;
    private javax.swing.JTextField txtBHXH;
    private javax.swing.JTextField txtBHYT;
    private javax.swing.JTextField txtChucVu;
    private javax.swing.JTextField txtHoTen;
    private javax.swing.JTextField txtLuongCanBan;
    private javax.swing.JTextField txtLuongUng;
    private javax.swing.JTextField txtMaNV;
    private javax.swing.JTextField txtPCCOM;
    private javax.swing.JTextField txtPCKhac;
    private javax.swing.JTextField txtPCXang;
    private javax.swing.JTextField txtPhat;
    private javax.swing.JTextField txtPhongBan;
    private com.toedter.calendar.JDateChooser txtTGform;
    private com.toedter.calendar.JDateChooser txtThoiGian;
    private javax.swing.JTextField txtThucLanh;
    private javax.swing.JTextField txtThuong;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables
 double thuong = 0.0;
    double phat = 0.0;
    int row = -1;
    int Cong = 0;
    double ungluong = 0.0;
    boolean sla = false;
    int checkxoa = 0;

    DecimalFormat df = new DecimalFormat("#,### VND");
    ThongKeDAO tkdao = new ThongKeDAOImpl();

    LuongUngDAO luongUngdao = new LuongUngDAOImpl();

    Double thucLanh = 0.0;
    LuongDAO luongdao = new LuongDAOImpl();
    List<Luong> listLuongThang;

    NhanVienDAO nvdao = new NhanVienDAOImpl();
    List<NhanVien> listNV = nvdao.getAll();

    ChamCongDAO ccdao = new ChamCongDAOImpl();

    ThuongVaKyLuatDAO tvkldao = new ThuongVaKyLuatDAOImpl();
    List<ThuongVaKyLuat> listTVKL;

    @Override
    public void initialize() {
        setLocationRelativeTo(null);
        this.showListOnTable(0, 0, null);
        this.row = -1;
        updateStatus();
    }

    @Override
    public void showListOnTable(Integer month, Integer year, String keyWord) {
        DefaultTableModel model = (DefaultTableModel) tblLuong.getModel();
        model.setRowCount(0);
        if (keyWord == null) {
            listLuongThang = luongdao.getBySql("select * from luong where MONTH(thang)=? and year(thang)=?",
                    month, year);
        } else {
            listLuongThang = luongdao.searchByKeyword(month, year, keyWord, keyWord);
        }

        try {
            for (Luong luong : listLuongThang) {
                for (NhanVien nv : listNV) {
                    if (luong.getMaNV().equalsIgnoreCase(nv.getMaNV())) {
                        tinhTP(nv);

                        Cong = ccdao.getByKeyword(nv.getMaNV(), month, year);
                        ungluong = luongUngdao.getByKeyword(nv.getMaNV(), month, year);
                        if (Cong < 25) {
                            thucLanh = (nv.getLuong() / 25) * Cong + thuong + phat - ungluong;
                        } else {
                            thucLanh = (nv.getLuong() / 25) * Cong + luong.getBHXH()
                                    + luong.getBHYT() + luong.getPCCOM() + luong.getPCKhac() + luong.getPCXang() + thuong + phat - ungluong;
                        }
                        Object[] row = {
                            false,
                            luong.getMaNV(),
                            nv.getHoTen(),
                            nv.getMaPB() == 1 ? "Phòng kế toán" : "Phòng bán hàng",
                            nv.getMaCV() == 1 ? "Trưởng phòng" : "Nhân viên",
                            df.format(nv.getLuong()),
                            df.format(thucLanh)};
                        model.addRow(row);
                        thucLanh = 0.0;
                    }

                }

            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
            e.printStackTrace();
        }
    }

    @Override
    public void fillTable() {
        this.createTable();
    }

    @Override
    public void createTable() {
        DefaultTableModel model = (DefaultTableModel) tblLuong.getModel();
        model.setRowCount(0);
        for (NhanVien nv : listNV) {
            int dem = 0;
            Luong luong = new Luong(0, nv.getMaNV(), XDate.toDate(String.valueOf(txtThoiGian.getDate().getYear() + 1900)
                    + "-" + String.valueOf(txtThoiGian.getDate().getMonth() + 1) + "-" + "01", "yyyy-MM-dd"),
                    0, 0, 0, 0, 0);
            showListOnTable(txtThoiGian.getDate().getMonth() + 1, txtThoiGian.getDate().getYear() + 1900, null);
            if (tblLuong.getRowCount() == 0) {
                luongdao.create(luong);

            } else {
                for (int i = 0; i < tblLuong.getRowCount(); i++) {
                    if (nv.getMaNV().equalsIgnoreCase(String.valueOf(tblLuong.getValueAt(i, 1)))) {
                        dem += 1;
                    }
                }
                if (dem == 0) {
                    luongdao.create(luong);

                }

            }

        }
        showListOnTable(txtThoiGian.getDate().getMonth() + 1, txtThoiGian.getDate().getYear() + 1900, null);
        updateStatus();

    }

    @Override
    public void chonAnh(NhanVien nv) {

        ImageIcon icon = XImage.read(nv.getHinh(), lblHinh); // đọc hình từ logos
        lblHinh.setIcon(icon);
    }

    @Override
    public void create() {
        Luong model = getForm();
        try {
            luongdao.create(model);
            this.showListOnTable(txtTGform.getDate().getMonth() + 1, txtTGform.getDate().getYear() + 1900, null);
//            this.clearForm();
            MsgBox.alert(this, "Thêm mới thành công!");
        } catch (Exception e) {
            MsgBox.alert(this, "Thêm mới thất bại!");
        }
        updateStatus();
    }
//

    @Override
    public void update() {
        Luong model = getForm();
        try {
            luongdao.update(model);
            this.showListOnTable(txtTGform.getDate().getMonth() + 1, txtTGform.getDate().getYear() + 1900, null);
            MsgBox.alert(this, "Cập nhật thành công!");
            this.edit(row);
        } catch (Exception e) {
            MsgBox.alert(this, "Cập nhật thất bại!");
        }
        updateStatus();
    }

    @Override
    public void delete() {
//        if (!Auth.isManager()) {
//            MsgBox.alert(this, "Bạn không có quyền xóa người học!");
//        } else if (MsgBox.confirm(this, "Bạn thực sự muốn xóa người học này?")) {
        try {
            for (int i = 0; i < tblLuong.getRowCount(); i++) {
                String maNV = tblLuong.getValueAt(i, 1).toString();
                if (tblLuong.getValueAt(i, 0).equals(true)) {
                    luongdao.deleteByKeyword("DELETE FROM Luong WHERE MaNV=? and MONTH(thang)=? and YEAR(thang)=?", maNV,
                            txtThoiGian.getDate().getMonth() + 1, txtThoiGian.getDate().getYear() + 1900);
                }
            }
            this.showListOnTable(txtThoiGian.getDate().getMonth() + 1, txtThoiGian.getDate().getYear() + 1900, null);
            MsgBox.alert(this, "Cập nhật thành công!");

        } catch (Exception e) {
            e.printStackTrace();
        }
        btnSelectAll.setText("Chọn tất cả");
        sla = false;
        updateStatus();
    }

    @Override
    public void resetForm() {
        Luong luong = new Luong(0, "", new Date(),
                0, 0, 0, 0, 0);
        NhanVien nv = new NhanVien("", "", "", "",
                new Date(), false, "", "",
                "", 0, 0, 0.0, "", "");
        setForm(luong, nv);
        row = -1;
        updateStatus();
    }

    @Override
    public void tinhTP(NhanVien nv) {
        thuong = 0.0;
        phat = 0.0;

        listTVKL = tvkldao.getByMaNV(nv.getMaNV(), txtThoiGian.getDate().getMonth() + 1, txtThoiGian.getDate().getYear() + 1900);
        try {
            for (ThuongVaKyLuat tvkl : listTVKL) {

                if (tvkl.getLoai()) {
                    thuong += tvkl.getSoTien();
                } else {
                    phat += tvkl.getSoTien();
                }
            }
        } catch (Exception e) {
        }

    }

    @Override
    public void setForm(Luong luong, NhanVien nv) {
        thuong = 0.0;
        phat = 0.0;
        tinhTP(nv);
        txtMaNV.setText(luong.getMaNV());
        txtHoTen.setText(nv.getHoTen());
        txtPhongBan.setText(nv.getMaPB() == 1 ? "Phòng kế toán" : "Phòng bán hàng");
        txtChucVu.setText(nv.getMaCV() == 1 ? "Trưởng phòng" : "Nhân viên");
        txtLuongCanBan.setText(df.format(nv.getLuong()) + "");
        txtThucLanh.setText(tblLuong.getValueAt(this.row, 6) + "");
        if (Cong < 25) {
            txtPCCOM.setText(" >= 25 ngày !");
            txtPCXang.setText(" >= 25 ngày !");
            txtPCKhac.setText(" >= 25 ngày !");
            txtBHXH.setText("Số ngày làm phải >= 25 ngày !");
            txtBHYT.setText("Số ngày làm phải >= 25 ngày !");
        } else {
            txtPCCOM.setText(luong.getPCCOM() + "");
            txtPCXang.setText(luong.getPCXang() + "");
            txtPCKhac.setText(luong.getPCKhac() + "");
            txtBHXH.setText(luong.getBHXH() + "");
            txtBHYT.setText(luong.getBHYT() + "");
        }
        txtThuong.setText(thuong + "");
        txtPhat.setText(phat + "");
        txtTGform.setDate(txtThoiGian.getDate());
        lblCong.setText(Cong + "");
        chonAnh(nv);
        updateStatus();
    }

    @Override
    public Luong getForm() {
        Luong luong = new Luong();
        luong.setMaNV(txtMaNV.getText());
        luong.setThang(XDate.toDate(String.valueOf(txtTGform.getDate().getYear() + 1900)
                + "-" + String.valueOf(txtTGform.getDate().getMonth() + 1) + "-" + "01", "yyyy-MM-dd"));
        luong.setBHXH(Integer.valueOf(txtBHXH.getText()));
        luong.setBHYT(Integer.valueOf(txtBHYT.getText()));
        luong.setPCXang(Integer.valueOf(txtPCXang.getText()));
        luong.setPCCOM(Integer.valueOf(txtPCCOM.getText()));
        luong.setPCKhac(Integer.valueOf(txtPCKhac.getText()));

        return luong;
    }

    @Override
    public void selectAll() {
        for (int i = 0; i < tblLuong.getRowCount(); i++) {
            if (tblLuong.getValueAt(i, 0).equals(false)) {
                tblLuong.setValueAt(true, i, 0);
                btnSelectAll.setText("Bỏ chọn tất cả");
            } else {
                btnSelectAll.setText("Chọn tất cả");

                tblLuong.setValueAt(false, i, 0);
            }
        }
        updateStatus();
    }

    @Override
    public void moveFirst() {
        row = 0;

        this.setSelectedRow(row);
        this.edit(row);
        updateStatus();
    }

    @Override
    public void setSelectedRow(int rowIndex) {
        tblLuong.clearSelection();
        tblLuong.setRowSelectionInterval(rowIndex, rowIndex);
        updateStatus();
    }

    @Override
    public void edit(int rowsl) {
        Date date = txtThoiGian.getDate();
        Luong entity = this.getEntityFromSelectedRow(rowsl);
        NhanVien nv = nvdao.getById(entity.getMaNV());
        Cong = ccdao.getByKeyword(nv.getMaNV(), date.getMonth() + 1, date.getYear() + 1900);

        this.setForm(entity, nv);

//        this.updateStatus();
        tabs.setSelectedIndex(1);
        updateStatus();
    }

    @Override
    public Luong getEntityFromSelectedRow(int rowsl) {

        Date date = txtThoiGian.getDate();
        int month = date.getMonth() + 1;
        int year = date.getYear() + 1900;
        List<Luong> listLuongThang = luongdao.getBySql("select * from luong where MONTH(thang)=? and year(thang)=?", month, year);
        Luong l = listLuongThang.get(rowsl);
        return l;
    }

    @Override
    public void movePrev() {

        if (tblLuong.getSelectedRow() == 0) {
            row = tblLuong.getRowCount() - 1;
        } else {
            row = tblLuong.getSelectedRow() - 1;
        }

        this.setSelectedRow(row);
        this.edit(row);
        updateStatus();
    }

    @Override
    public void moveNext() {

        if (tblLuong.getSelectedRow() == tblLuong.getRowCount() - 1) {
            row = 0;
        } else {
            row = tblLuong.getSelectedRow() + 1;
        }

        this.setSelectedRow(row);
        this.edit(row);
        updateStatus();
    }

    @Override
    public void moveLast() {
        row = tblLuong.getRowCount() - 1;
        this.setSelectedRow(row);
        this.edit(row);
        updateStatus();
    }

    @Override
    public void timKiem() {
        String timKiem = txtTimKiem.getText();
        int month = txtThoiGian.getDate().getMonth() + 1;
        int year = txtThoiGian.getDate().getYear() + 1900;

        this.showListOnTable(month, year, timKiem);
        updateStatus();
    }

    @Override
    public void updateStatus() {
        boolean xoa = checkxoa == 0;

        boolean edit = (this.row >= 0); //flase

        boolean first = (this.row == 0);//false
        boolean last = (this.row == tblLuong.getRowCount() - 1);//flase
        // Trạng thái form
        txtMaNV.setEditable(!edit);
        btnSelectAll.setEnabled(sla);
        btnUng.setEnabled(edit && Integer.valueOf(lblCong.getText()) >= 5);
//        btnMoi.setEnabled(edit);
        // Trạng thái điều hướng
        btnFirst.setEnabled(edit && !first);
        btnPrev.setEnabled(edit);
        btnNext.setEnabled(edit);
        btnLast.setEnabled(edit && !last);

        txtBHXH.setEditable(edit && Integer.valueOf(lblCong.getText()) >= 25);
        txtBHYT.setEditable(edit && Integer.valueOf(lblCong.getText()) >= 25);
        txtPCCOM.setEditable(edit && Integer.valueOf(lblCong.getText()) >= 25);
        txtPCKhac.setEditable(edit && Integer.valueOf(lblCong.getText()) >= 25);
        txtPCXang.setEditable(edit && Integer.valueOf(lblCong.getText()) >= 25);
        btnSua.setEnabled(edit && Integer.valueOf(lblCong.getText()) >= 25);
    }

    @Override
    public boolean isValidated() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void setOnOffTxtFields(boolean value) {

        txtBHXH.setEditable(value);
        txtBHYT.setEditable(value);
        txtPCCOM.setEditable(value);
        txtPCKhac.setEditable(value);
        txtPCXang.setEditable(value);
        btnSua.setEnabled(value);

    }

    @Override
    public void putDataToThongKe() {
        double tongPB1 = 0.0;
        double tongPB2 = 0.0;
        Date thoiGian = XDate.toDate(String.valueOf(txtThoiGian.getDate().getYear() + 1900)
                + "-" + String.valueOf(txtThoiGian.getDate().getMonth() + 1) + "-" + "01", "yyyy-MM-dd");
        for (int i = 0; i < tblLuong.getRowCount(); i++) {
            if (tblLuong.getValueAt(i, 3).equals("Phòng kế toán")) {
                Object value = tblLuong.getValueAt(i, 6);
                try {
                    Number nb = df.parse(String.valueOf(value));
                    double so = nb.doubleValue();
                    tongPB1 += so;

                } catch (ParseException ex) {
                    Logger.getLogger(LuongJDialog.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                Object value = tblLuong.getValueAt(i, 6);
                try {
                    Number nb = df.parse(String.valueOf(value));
                    double so = nb.doubleValue();
                    tongPB2 += so;

                } catch (ParseException ex) {
                    Logger.getLogger(LuongJDialog.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        }
        ThongKe.thongKeLuongThang tklt = new ThongKe.thongKeLuongThang(thoiGian, "Phòng kế toán", tongPB1);
        tkdao.deleteById(thoiGian);
        tkdao.create(tklt);
        ThongKe.thongKeLuongThang tklt2 = new ThongKe.thongKeLuongThang(thoiGian, "Phòng bán hàng", tongPB2);
        tkdao.create(tklt2);
    }

}
