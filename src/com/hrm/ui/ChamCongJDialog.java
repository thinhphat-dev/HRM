/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.hrm.ui;

import com.hrm.controlller.ChamCongController;
import com.hrm.dao.ChamCongDAO;
import com.hrm.dao.impl.ChamCongDAOImpl;
import com.hrm.dao.NhanVienDAO;
import com.hrm.dao.impl.NhanVienDAOImpl;
import com.hrm.entity.ChamCong;
import com.hrm.entity.NhanVien;
import com.hrm.util.MsgBox;
import com.hrm.util.XDate;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class ChamCongJDialog extends javax.swing.JDialog implements ChamCongController {

    /**
     * Creates new form NguoiHocJDialog
     */
    public ChamCongJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.initialize();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        tabs = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblChamCong = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        txtTimKiem = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtThoiGian = new com.toedter.calendar.JDateChooser();
        jLabel10 = new javax.swing.JLabel();
        btnSelectAll = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("QLNS - Chấm công nhân viên");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblChamCong.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MÃ NV", "HỌ VÀ TÊN", "PHÒNG BAN", "CHỨC VỤ", "CÓ LÀM"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblChamCong.setRowHeight(25);
        tblChamCong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblChamCongMouseReleased(evt);
            }
        });
        tblChamCong.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tblChamCongPropertyChange(evt);
            }
        });
        jScrollPane1.setViewportView(tblChamCong);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("TÌM KIẾM"));

        txtTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimKiemActionPerformed(evt);
            }
        });
        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyReleased(evt);
            }
        });

        jLabel9.setText("Thời gian :");

        txtThoiGian.setDateFormatString("d/M/y");
        txtThoiGian.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                txtThoiGianMouseReleased(evt);
            }
        });
        txtThoiGian.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtThoiGianPropertyChange(evt);
            }
        });

        jLabel10.setText("Thông tin :");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtThoiGian, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel10))
            .addComponent(jLabel9)
            .addComponent(txtThoiGian, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        btnSelectAll.setText("Chọn tất cả");
        btnSelectAll.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnSelectAllMouseReleased(evt);
            }
        });
        btnSelectAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectAllActionPerformed(evt);
            }
        });

        btnUpdate.setText("Cập nhật");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 863, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSelectAll, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSelectAll)
                    .addComponent(btnUpdate))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        tabs.addTab("DANH SÁCH", jPanel2);

        getContentPane().add(tabs, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 29, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 204));
        jLabel5.setText("CHẤM CÔNG NHÂN VIÊN");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimKiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimKiemActionPerformed

    private void txtTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyReleased
        try {
            this.timKiem();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtTimKiemKeyReleased

    private void txtThoiGianPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtThoiGianPropertyChange
        if (evt.getPropertyName().equals("date")) {
            String date = XDate.toString(txtThoiGian.getDate(), "yyyy-MM-dd");
            fillTable(date, null);

        }
        
        if (tblChamCong.getRowCount()==0) {
            
            checkall = true;
        }else{
         checkall = false;   
        }
        updateStatus();
    }//GEN-LAST:event_txtThoiGianPropertyChange

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        this.delete();
        this.update();
        String date = XDate.toString(txtThoiGian.getDate(), "yyyy-MM-dd");
        fillTable(date, null);


    }//GEN-LAST:event_btnUpdateActionPerformed
  
    private void btnSelectAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectAllActionPerformed
        this.selectAll();
        for (int i = 0; i < tblChamCong.getRowCount(); i++) {

            if (tblChamCong.getValueAt(i, 4).equals(true)) {
                check++;
            }
        }
        updateStatus();
    }//GEN-LAST:event_btnSelectAllActionPerformed

    private void btnSelectAllMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSelectAllMouseReleased
        // TODO add your handling code here:
        
    }//GEN-LAST:event_btnSelectAllMouseReleased

    private void tblChamCongMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblChamCongMouseReleased
        // TODO add your handling code here:
        
        for (int i = 0; i < tblChamCong.getRowCount(); i++) {

            if (tblChamCong.getValueAt(i, 4).equals(true)) {
                check++;
            }
        }
        updateStatus();
        check = 0;
    }//GEN-LAST:event_tblChamCongMouseReleased
boolean checkall = false;
    private void tblChamCongPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tblChamCongPropertyChange
        // TODO add your handling code here:
        
    }//GEN-LAST:event_tblChamCongPropertyChange

    private void txtThoiGianMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtThoiGianMouseReleased
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtThoiGianMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChamCongJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChamCongJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChamCongJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChamCongJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ChamCongJDialog dialog = new ChamCongJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSelectAll;
    private javax.swing.JButton btnUpdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblChamCong;
    private com.toedter.calendar.JDateChooser txtThoiGian;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables
  int check = 0;
    String chamCong;
    ChamCongDAO ccdao = new ChamCongDAOImpl();
    NhanVienDAO nvdao = new NhanVienDAOImpl();
    List<NhanVien> listNV = nvdao.getAll();
    List<NhanVien> listNVBySQL;

    @Override

    public void initialize() {
        setLocationRelativeTo(null);
        this.fillTable(null, null);
        updateStatus();
    }

    @Override

    public void fillTable(String date, String keyword) {
        if (date == null) {
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblChamCong.getModel();
        model.setRowCount(0);

        try {
            if (keyword != null) {
                if (keyword.trim().substring(0, 2).equalsIgnoreCase("nv")) {
                    listNVBySQL = nvdao.getBySql("SELECT * FROM NhanVien WHERE MaNV like CONCAT('%', ? , '%')", "%" + keyword + "%");

                } else {
                    listNVBySQL = nvdao.getBySql("SELECT * FROM NhanVien WHERE HoTen like CONCAT('%', ? , '%')", "%" + keyword + "%");

                }
                for (NhanVien nv : listNVBySQL) {
                    Object[] row = {
                        nv.getMaNV(),
                        nv.getHoTen(),
                        nv.getMaPB() == 1 ? "Phòng kế toán" : "Phòng bán hàng",
                        nv.getMaCV() == 1 ? "Trưởng phòng" : "Nhân viên",
                        nv.getMaNV().equalsIgnoreCase(
                        chamCong = ccdao.getMaNVfromChamCong(nv.getMaNV(), date)) ? true : false
                    };

                    model.addRow(row);

                }
                return;

            }
            for (NhanVien nv : listNV) {
                Object[] row = {
                    nv.getMaNV(),
                    nv.getHoTen(),
                    nv.getMaPB() == 1 ? "Phòng kế toán" : "Phòng bán hàng",
                    nv.getMaCV() == 1 ? "Trưởng phòng" : "Nhân viên",
                    nv.getMaNV().equalsIgnoreCase(
                    chamCong = ccdao.getMaNVfromChamCong(nv.getMaNV(), date)) ? true : false
                };

                model.addRow(row);
            }

        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
            e.printStackTrace();
        }
        updateStatus();
    }

    @Override

    public void update() {
        for (int i = 0; i < tblChamCong.getRowCount(); i++) {
            try {

                if (tblChamCong.getValueAt(i, 4).equals(true)) {
                    ChamCong cc = new ChamCong();
                    cc.setMaNV(tblChamCong.getValueAt(i, 0).toString());
                    cc.setNgayLam(txtThoiGian.getDate());
                    cc.setThang(XDate.toDate(String.valueOf(txtThoiGian.getDate().getYear() + 1900)
                            + "-" + String.valueOf(txtThoiGian.getDate().getMonth() + 1) + "-" + "01", "yyyy-MM-dd"));
                    ccdao.create(cc);

                }
            } catch (Exception e) {
                e.printStackTrace();
            }

        }
        updateStatus();

    }

    @Override

    public void delete() {
//        if (!Auth.isManager()) {
//            MsgBox.alert(this, "Bạn không có quyền xóa người học!");
//        } else if (MsgBox.confirm(this, "Bạn thực sự muốn xóa người học này?")) {
        try {
            ccdao.deleteByKeyword("DELETE FROM BangChamCong WHERE NgayLam=?", XDate.toString(txtThoiGian.getDate(), "yyyy-MM-dd"));
            MsgBox.alert(this, "Cập nhật thành công!");
        } catch (Exception e) {
            e.printStackTrace();
        }
        updateStatus();
    }

    @Override

    public void selectAll() {
       if (btnSelectAll.getText().equalsIgnoreCase("Chọn tất cả")) {
            for (int i = 0; i < tblChamCong.getRowCount(); i++) {
                tblChamCong.setValueAt(true, i, 4);
                btnSelectAll.setText("Bỏ chọn tất cả");
            }}
        else
        if (btnSelectAll.getText().equalsIgnoreCase("Bỏ chọn tất cả")) {
            for (int i = 0; i < tblChamCong.getRowCount(); i++) {
                tblChamCong.setValueAt(false, i, 4);
                btnSelectAll.setText("Chọn tất cả");
            }
             
        }
        updateStatus();
    }

    @Override

    public void timKiem() {
        String date = XDate.toString(txtThoiGian.getDate(), "yyyy-MM-dd");
        String timKiem = txtTimKiem.getText();
        if (timKiem.equals("")) {
            this.fillTable(date, null);
            return;
        }
        if (timKiem.trim().substring(0, 2).equalsIgnoreCase("nv")) {
            this.fillTable(date, timKiem);
        } else {
            this.fillTable(date, timKiem);
        }
        updateStatus();
    }

    @Override
    public void updateStatus() {
        boolean cn = check == 0;

        // Trạng thái form
        btnUpdate.setEnabled(!cn);
        btnSelectAll.setEnabled(!checkall);
    }

}
